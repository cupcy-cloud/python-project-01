pipeline {
    agent any
    environment {
      AWS_ACCOUNT_ID = "620336895710"
      AWS_DEFAULT_REGION = "us-east-1"
      REPOSITORY_URI = "620336895710.dkr.ecr.us-east-1.amazonaws.com"
    }
    tools {
      maven "maven-3.9.3"
    }
    stages {
        stage('Checkout from git') {
            steps {
                // Get code from a GitHub repository
                git url: 'https://github.com/cupcy-cloud/python-project-01.git', branch: 'main',
                 credentialsId: 'git_credentials'
            }
        }

        stage('Build the code') {
            steps {
                sh "mvn clean install -DskipTests"
            }
        }

        stage('SonarQube static analysis') {
            steps {
                withSonarQubeEnv('sonarqube') {
                    sh 'mvn clean package sonar:sonar'
                }
            }
        }
        
        stage('Sonar Quality Gate') {
            steps {
                script {
                    echo 'Quality Gate'
                    timeout(time: 5, unit: 'MINUTES') {
                        def qualityGate = waitForQualityGate()
                        if (qualityGate.status != 'OK') {
                            error "Pipeline aborted due to quality gate failure: ${qualityGate.status}"
                        }
                    }            
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    commitID = sh(returnStdout: true, script: "git rev-parse --short=10 HEAD").trim();
                    sh "docker build -t ${env.REPOSITORY_URI}/java-project:${commitID} ."
                }
            }
        }

        stage('Push docker Image') {
            steps {
                script {
                    sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${env.REPOSITORY_URI}"
                    sh "docker push ${env.REPOSITORY_URI}/java-project:${commitID}"
                }
            }
        }
     }
}

