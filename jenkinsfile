pipeline {
    agent any
    environment {
      AWS_ACCOUNT_ID = "620336895710"
      AWS_DEFAULT_REGION = "us-east-1"
      REPOSITORY_URI = "620336895710.dkr.ecr.us-east-1.amazonaws.com"
    }
    tools {
      maven "maven-3.9.3"
    }
    stages {
        stage('Checkout from git') {
            steps {
                // Get code from a GitHub repository
                git url: 'https://github.com/cupcy-cloud/python-project-01.git', branch: 'main',
                 credentialsId: 'git_credentials'
            }
        }

        stage('Build the code') {
            steps {
                sh "mvn clean install -DskipTests"
            }
        }

        stage('SonarQube static analysis') {
            steps {
                withSonarQubeEnv('sonarqube') {
                    sh 'mvn clean package sonar:sonar'
                }
            }
        }
        
        stage('Sonar Quality Gate') {
            steps {
                script {
                    echo 'Quality Gate'
                    timeout(time: 5, unit: 'MINUTES') {
                        def qualityGate = waitForQualityGate()
                        if (qualityGate.status != 'OK') {
                            error "Pipeline aborted due to quality gate failure: ${qualityGate.status}"
                        }
                    }            
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    commitID = sh(returnStdout: true, script: "git rev-parse --short=10 HEAD").trim();
                    sh "docker build -t ${env.REPOSITORY_URI}/java-project:${commitID} ."
                }
            }
        }

        stage('Push docker Image') {
            steps {
                script {
                    sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${env.REPOSITORY_URI}"
                    sh "docker push ${env.REPOSITORY_URI}/java-project:${commitID}"
                }
            }
        }


        // stage('Commit & Push Manifest') {
        //     steps {
        //         script {
        //             commitID = sh(returnStdout: true, script: "git rev-parse --short=10 HEAD").trim();
        //             // Checkout code from Bitbucket on the branch
        //             git branch: 'main', credentialsId: 'git_credentials', url: 'https://github.com/cupcy-cloud/python-project-01.git'
        //             sh "git config user.name 'cupcy-cloud'"
        //             sh "git config user.email 'thiyagarajan8606@gmail.com'"
        //             sh("sed -i 's/replaceImageTag/${commitID}/g' k8s-manifest/deployment.yml")
                    
        //             withCredentials([gitUsernamePassword(credentialsId: 'git_credentials', gitToolName: 'Default')]) {
        //                 sh 'git fetch origin'
        //                 sh 'git add -u'
        //                 sh "git commit -m 'Jenkins commit'"
        //                 sh 'git push origin main'
        //             }
        //         }
        //     }
        // }

        stage('Update Deployment File') {
            environment {
                GIT_REPO_NAME = "python-project-01"
                GIT_USER_NAME = "cupcy-cloud"
            }
            steps {
                withCredentials([gitUsernamePassword(credentialsId: 'git_credentials', variable: 'GITHUB_TOKEN')]) {
                    script {
                        commitID = sh(script: "git rev-parse --short=10 HEAD", returnStdout: true).trim()
                        sh '''
                            git config user.name "cupcy-cloud"
                            git config user.email "thiyagarajan8606@gmail.com"
                            sed -i "s/replaceImageTag/${commitID}/g" k8s-manifest/deployment.yml
                            git add .
                            git commit -m "Update deployment image to version ${commitID}"
                            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                        '''
                    }
                }
            }
        }
       

     }
}

